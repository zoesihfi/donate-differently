import { map } from './map';
export function pluck(...properties) {
    const length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return (source) => map(plucker(properties, length))(source);
}
function plucker(props, length) {
    const mapper = (x) => {
        let currentProp = x;
        for (let i = 0; i < length; i++) {
<<<<<<< HEAD
<<<<<<< HEAD
            const p = currentProp != null ? currentProp[props[i]] : undefined;
            if (p !== void 0) {
=======
            const p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
            const p = currentProp != null ? currentProp[props[i]] : undefined;
            if (p !== void 0) {
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map