<<<<<<< HEAD
<<<<<<< HEAD
import * as TSESLint from '../ts-eslint';
import { ParserServices } from '../ts-estree';
=======
import { ParserServices, TSESLint } from '../';
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
import * as TSESLint from '../ts-eslint';
import { ParserServices } from '../ts-estree';
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
declare type RequiredParserServices = {
    [k in keyof ParserServices]: Exclude<ParserServices[k], undefined>;
};
/**
 * Try to retrieve typescript parser service from context
 */
<<<<<<< HEAD
<<<<<<< HEAD
declare function getParserServices<TMessageIds extends string, TOptions extends unknown[]>(context: TSESLint.RuleContext<TMessageIds, TOptions>): RequiredParserServices;
export { getParserServices };
=======
export declare function getParserServices<TMessageIds extends string, TOptions extends unknown[]>(context: TSESLint.RuleContext<TMessageIds, TOptions>): RequiredParserServices;
export {};
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
declare function getParserServices<TMessageIds extends string, TOptions extends unknown[]>(context: TSESLint.RuleContext<TMessageIds, TOptions>): RequiredParserServices;
export { getParserServices };
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
//# sourceMappingURL=getParserServices.d.ts.map