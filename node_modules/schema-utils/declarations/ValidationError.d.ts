export default ValidationError;
export type JSONSchema6 = import('json-schema').JSONSchema6;
export type JSONSchema7 = import('json-schema').JSONSchema7;
export type Schema =
<<<<<<< HEAD
<<<<<<< HEAD
  | (import('json-schema').JSONSchema4 & import('./validate').Extend)
  | (import('json-schema').JSONSchema6 & import('./validate').Extend)
  | (import('json-schema').JSONSchema7 & import('./validate').Extend);
=======
  | import('json-schema').JSONSchema4
  | import('json-schema').JSONSchema6
  | import('json-schema').JSONSchema7;
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
  | (import('json-schema').JSONSchema4 & import('./validate').Extend)
  | (import('json-schema').JSONSchema6 & import('./validate').Extend)
  | (import('json-schema').JSONSchema7 & import('./validate').Extend);
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
export type ValidationErrorConfiguration = {
  name?: string | undefined;
  baseDataPath?: string | undefined;
  postFormatter?: import('./validate').PostFormatter | undefined;
};
export type PostFormatter = (
  formattedError: string,
  error: import('ajv').ErrorObject & {
    children?: import('ajv').ErrorObject[] | undefined;
  }
) => string;
export type SchemaUtilErrorObject = import('ajv').ErrorObject & {
  children?: import('ajv').ErrorObject[] | undefined;
};
export type SPECIFICITY = number;
declare class ValidationError extends Error {
  /**
   * @param {Array<SchemaUtilErrorObject>} errors
   * @param {Schema} schema
   * @param {ValidationErrorConfiguration} configuration
   */
  constructor(
<<<<<<< HEAD
<<<<<<< HEAD
    errors: Array<SchemaUtilErrorObject>,
    schema: Schema,
    configuration?: ValidationErrorConfiguration
=======
    errors: (import('ajv').ErrorObject & {
      children?: import('ajv').ErrorObject[] | undefined;
    })[],
    schema:
      | import('json-schema').JSONSchema4
      | import('json-schema').JSONSchema6
      | import('json-schema').JSONSchema7,
    configuration?: import('./validate').ValidationErrorConfiguration
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
    errors: Array<SchemaUtilErrorObject>,
    schema: Schema,
    configuration?: ValidationErrorConfiguration
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
  );
  /** @type {Array<SchemaUtilErrorObject>} */
  errors: Array<SchemaUtilErrorObject>;
  /** @type {Schema} */
  schema: Schema;
  /** @type {string} */
  headerName: string;
  /** @type {string} */
  baseDataPath: string;
  /** @type {PostFormatter | null} */
  postFormatter: PostFormatter | null;
  /**
   * @param {string} path
   * @returns {Schema}
   */
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
  getSchemaPart(path: string): Schema;
  /**
   * @param {Schema} schema
   * @param {boolean} logic
<<<<<<< HEAD
=======
  getSchemaPart(
    path: string
  ):
    | import('json-schema').JSONSchema4
    | import('json-schema').JSONSchema6
    | import('json-schema').JSONSchema7;
  /**
   * @param {Schema} schema
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
   * @param {Array<Object>} prevSchemas
   * @returns {string}
   */
  formatSchema(
<<<<<<< HEAD
<<<<<<< HEAD
    schema: Schema,
    logic?: boolean,
    prevSchemas?: Array<Object>
=======
    schema:
      | import('json-schema').JSONSchema4
      | import('json-schema').JSONSchema6
      | import('json-schema').JSONSchema7,
    prevSchemas?: Object[]
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
    schema: Schema,
    logic?: boolean,
    prevSchemas?: Array<Object>
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
  ): string;
  /**
   * @param {Schema=} schemaPart
   * @param {(boolean | Array<string>)=} additionalPath
   * @param {boolean=} needDot
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
   * @param {boolean=} logic
   * @returns {string}
   */
  getSchemaPartText(
    schemaPart?: Schema | undefined,
    additionalPath?: (boolean | Array<string>) | undefined,
    needDot?: boolean | undefined,
    logic?: boolean | undefined
<<<<<<< HEAD
=======
   * @returns {string}
   */
  getSchemaPartText(
    schemaPart?:
      | import('json-schema').JSONSchema4
      | import('json-schema').JSONSchema6
      | import('json-schema').JSONSchema7
      | undefined,
    additionalPath?: boolean | string[] | undefined,
    needDot?: boolean | undefined
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
  ): string;
  /**
   * @param {Schema=} schemaPart
   * @returns {string}
   */
<<<<<<< HEAD
<<<<<<< HEAD
  getSchemaPartDescription(schemaPart?: Schema | undefined): string;
=======
  getSchemaPartDescription(
    schemaPart?:
      | import('json-schema').JSONSchema4
      | import('json-schema').JSONSchema6
      | import('json-schema').JSONSchema7
      | undefined
  ): string;
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
  getSchemaPartDescription(schemaPart?: Schema | undefined): string;
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
  /**
   * @param {SchemaUtilErrorObject} error
   * @returns {string}
   */
<<<<<<< HEAD
<<<<<<< HEAD
  formatValidationError(error: SchemaUtilErrorObject): string;
=======
  formatValidationError(
    error: import('ajv').ErrorObject & {
      children?: import('ajv').ErrorObject[] | undefined;
    }
  ): string;
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
  formatValidationError(error: SchemaUtilErrorObject): string;
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
  /**
   * @param {Array<SchemaUtilErrorObject>} errors
   * @returns {string}
   */
<<<<<<< HEAD
<<<<<<< HEAD
  formatValidationErrors(errors: Array<SchemaUtilErrorObject>): string;
=======
  formatValidationErrors(
    errors: (import('ajv').ErrorObject & {
      children?: import('ajv').ErrorObject[] | undefined;
    })[]
  ): string;
>>>>>>> 782567c486993431d88a7d42ed2c18702ecdfd4f
=======
  formatValidationErrors(errors: Array<SchemaUtilErrorObject>): string;
>>>>>>> b9690f13ae0b02552662ffbd680e2069f9283c9e
}
